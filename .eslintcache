[{"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\App.tsx":"1","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\api\\experiences.ts":"2","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\profile\\UserOverview\\UpdateInformationForm.tsx":"3","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\profile\\UserInformation\\Tabs\\AboutMeTab.tsx":"4","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Authentication\\Modals\\ForgotPasswordModal.tsx":"5","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\helpers\\createFilterString.ts":"6","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Header\\Header.tsx":"7","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyMapbox.tsx":"8","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyErrorMessage.tsx":"9","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Header\\partials\\BrandLogo.tsx":"10","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyCheckbox.tsx":"11","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyAutocomplete.tsx":"12","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\index.tsx":"13","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\routes\\index.tsx":"14","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\helpers\\calculateProgress.ts":"15","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\layouts\\MainLayout.tsx":"16","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\profile\\UserOverview\\ConfirmedInformation.tsx":"17","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Authentication\\Forms\\ResetPasswordForm.tsx":"18","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Authentication\\Modals\\EmailVerificationModal.tsx":"19","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyStepper.tsx":"20","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyAlert.tsx":"21","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Header\\partials\\SearchBar.tsx":"22","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\api\\auth.ts":"23","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\actions\\auth\\authAction.ts":"24","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\actions\\experience\\experienceAction.ts":"25","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\actions\\experience\\experienceActionTypes.ts":"26","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\profile\\UserOverview\\DisplayedInformationForm.tsx":"27","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Authentication\\Forms\\LoginForm.tsx":"28","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\api\\configureAxios.ts":"29","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Header\\partials\\UserOptions.tsx":"30","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyFileInput.tsx":"31","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\reducers\\experience.ts":"32","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Authentication\\Forms\\RegisterForm.tsx":"33","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\auth\\RegisterPage.tsx":"34","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\hooks\\useErrorHandler.ts":"35","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\profile\\UserOverview\\UserOverview.tsx":"36","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\profile\\ProfilePage.tsx":"37","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\auth\\ForgotPasswordPage.tsx":"38","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\profile\\UserInformation\\UserInformation.tsx":"39","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Authentication\\Forms\\ForgotPasswordForm.tsx":"40","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyTextField.tsx":"41","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\auth\\LoginPage.tsx":"42","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\profile\\UserOverview\\ChangePasswordForm.tsx":"43","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\profile\\UserOverview\\DisplayedInformation.tsx":"44","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\api\\seeds.ts":"45","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyRadioButton.tsx":"46","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyPhotoUpload.tsx":"47","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\helpers\\createLookUpString.ts":"48","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\constants\\index.ts":"49","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyModal.tsx":"50","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\reducers\\index.ts":"51","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\404\\404Page.tsx":"52","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\auth\\ResetPasswordPage.tsx":"53","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\home\\HomePage.tsx":"54","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\reducers\\auth.ts":"55","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\reducers\\alert.ts":"56","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\actions\\alert\\alertActionTypes.ts":"57","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\actions\\alert\\alertAction.ts":"58","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\api\\users.ts":"59","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\actions\\auth\\authActionTypes.ts":"60","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\store\\index.ts":"61","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\AccountPage.tsx":"62","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyBreadcrumbs.tsx":"63","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\information\\InfoSettingPage.tsx":"64","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\information\\ChangeNameForm.tsx":"65","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\configs\\index.ts":"66","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\information\\ChangeGenderForm.tsx":"67","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\information\\ChangeBirthDateForm.tsx":"68","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\information\\ChangePhoneNumberForm.tsx":"69","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\information\\ChangeAddressForm.tsx":"70","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\api\\profile.ts":"71","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\login-and-security\\LoginAndSecuritySettingPage.tsx":"72","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\information\\UpdateIDPage.tsx":"73","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\information\\ChooseIDTypeForm.tsx":"74","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\information\\UploadIDPhotos.tsx":"75","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\helpers\\currencyFormatter.ts":"76","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceManagementPage.tsx":"77","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceActivationPage\\ExperienceActivationPage.tsx":"78","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\ExperienceCreationPage.tsx":"79","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Submission\\Submission.tsx":"80","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Introduction\\HostProvision.tsx":"81","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Introduction\\Title.tsx":"82","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Idea\\Location.tsx":"83","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Idea\\Theme.tsx":"84","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Setting\\GroupSize.tsx":"85","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Submission\\InfoVerification.tsx":"86","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\Experience\\ExperiencePage.tsx":"87","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Idea\\Idea.tsx":"88","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Setting\\Price.tsx":"89","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Setting\\BookingDate.tsx":"90","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Introduction\\Photos.tsx":"91","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Introduction\\Address.tsx":"92","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Submission\\IDCardVerification.tsx":"93","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Introduction\\Introduction.tsx":"94","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Idea\\Language.tsx":"95","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\api\\payment.ts":"96","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Introduction\\Description.tsx":"97","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyImageCarousel.tsx":"98","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyImageHero.tsx":"99","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Introduction\\GuestBring.tsx":"100","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Setting\\Duration.tsx":"101","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Setting\\Setting.tsx":"102","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\Experience\\ConfirmBookingPage.tsx":"103","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\Experience\\SuccessBookingResponsePage.tsx":"104","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\api\\receipt.ts":"105","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\helpers\\toWeekDayString.ts":"106","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\api\\stripe.ts":"107"},{"size":138,"mtime":1615292030895,"results":"108","hashOfConfig":"109"},{"size":1090,"mtime":1616338441665,"results":"110","hashOfConfig":"109"},{"size":2323,"mtime":1615467850098,"results":"111","hashOfConfig":"109"},{"size":3524,"mtime":1616052498138,"results":"112","hashOfConfig":"109"},{"size":2122,"mtime":1615467598289,"results":"113","hashOfConfig":"109"},{"size":195,"mtime":1614177863900,"results":"114","hashOfConfig":"109"},{"size":897,"mtime":1615983322680,"results":"115","hashOfConfig":"109"},{"size":1292,"mtime":1616597795219,"results":"116","hashOfConfig":"109"},{"size":500,"mtime":1615467661591,"results":"117","hashOfConfig":"109"},{"size":603,"mtime":1615467606937,"results":"118","hashOfConfig":"109"},{"size":503,"mtime":1615467655583,"results":"119","hashOfConfig":"109"},{"size":1219,"mtime":1615896486669,"results":"120","hashOfConfig":"109"},{"size":447,"mtime":1615292027634,"results":"121","hashOfConfig":"109"},{"size":4379,"mtime":1616840684253,"results":"122","hashOfConfig":"109"},{"size":1122,"mtime":1616669154673,"results":"123","hashOfConfig":"109"},{"size":575,"mtime":1616515649578,"results":"124","hashOfConfig":"109"},{"size":926,"mtime":1616078493265,"results":"125","hashOfConfig":"109"},{"size":2539,"mtime":1615467582459,"results":"126","hashOfConfig":"109"},{"size":2347,"mtime":1615467590682,"results":"127","hashOfConfig":"109"},{"size":1366,"mtime":1616135141646,"results":"128","hashOfConfig":"109"},{"size":1051,"mtime":1615467632721,"results":"129","hashOfConfig":"109"},{"size":1376,"mtime":1615467612652,"results":"130","hashOfConfig":"109"},{"size":992,"mtime":1614013727534,"results":"131","hashOfConfig":"109"},{"size":106,"mtime":1614073680164,"results":"132","hashOfConfig":"109"},{"size":486,"mtime":1615875694054,"results":"133","hashOfConfig":"109"},{"size":156,"mtime":1615219386893,"results":"134","hashOfConfig":"109"},{"size":1987,"mtime":1615467842642,"results":"135","hashOfConfig":"109"},{"size":3414,"mtime":1615467565830,"results":"136","hashOfConfig":"109"},{"size":192,"mtime":1613398330451,"results":"137","hashOfConfig":"109"},{"size":3928,"mtime":1615981670183,"results":"138","hashOfConfig":"109"},{"size":2167,"mtime":1615467667877,"results":"139","hashOfConfig":"109"},{"size":721,"mtime":1615876704893,"results":"140","hashOfConfig":"109"},{"size":7154,"mtime":1616042501644,"results":"141","hashOfConfig":"109"},{"size":2382,"mtime":1615467722207,"results":"142","hashOfConfig":"109"},{"size":404,"mtime":1615470078387,"results":"143","hashOfConfig":"109"},{"size":8980,"mtime":1615813489082,"results":"144","hashOfConfig":"109"},{"size":2151,"mtime":1615983411527,"results":"145","hashOfConfig":"109"},{"size":1754,"mtime":1615467711406,"results":"146","hashOfConfig":"109"},{"size":2244,"mtime":1615467820418,"results":"147","hashOfConfig":"109"},{"size":2317,"mtime":1615467559397,"results":"148","hashOfConfig":"109"},{"size":903,"mtime":1615997070336,"results":"149","hashOfConfig":"109"},{"size":1997,"mtime":1616078493382,"results":"150","hashOfConfig":"109"},{"size":2081,"mtime":1615467824917,"results":"151","hashOfConfig":"109"},{"size":2223,"mtime":1615467837130,"results":"152","hashOfConfig":"109"},{"size":506,"mtime":1615210790939,"results":"153","hashOfConfig":"109"},{"size":506,"mtime":1615467677390,"results":"154","hashOfConfig":"109"},{"size":4004,"mtime":1616680273401,"results":"155","hashOfConfig":"109"},{"size":122,"mtime":1614253649195,"results":"156","hashOfConfig":"109"},{"size":4191,"mtime":1616683585184,"results":"157","hashOfConfig":"109"},{"size":1453,"mtime":1616681197923,"results":"158","hashOfConfig":"109"},{"size":204,"mtime":1615218485658,"results":"159","hashOfConfig":"109"},{"size":185,"mtime":1614423466955,"results":"160","hashOfConfig":"109"},{"size":1465,"mtime":1615467727698,"results":"161","hashOfConfig":"109"},{"size":1053,"mtime":1616345199605,"results":"162","hashOfConfig":"109"},{"size":493,"mtime":1615875310552,"results":"163","hashOfConfig":"109"},{"size":677,"mtime":1615875170380,"results":"164","hashOfConfig":"109"},{"size":84,"mtime":1612977346869,"results":"165","hashOfConfig":"109"},{"size":319,"mtime":1613307376785,"results":"166","hashOfConfig":"109"},{"size":788,"mtime":1614699822403,"results":"167","hashOfConfig":"109"},{"size":37,"mtime":1614073640554,"results":"168","hashOfConfig":"109"},{"size":122,"mtime":1613019212859,"results":"169","hashOfConfig":"109"},{"size":2648,"mtime":1615990154551,"results":"170","hashOfConfig":"109"},{"size":1098,"mtime":1616071697736,"results":"171","hashOfConfig":"109"},{"size":8840,"mtime":1616079207933,"results":"172","hashOfConfig":"109"},{"size":2089,"mtime":1616039478580,"results":"173","hashOfConfig":"109"},{"size":52,"mtime":1612516616400,"results":"174","hashOfConfig":"109"},{"size":2308,"mtime":1616042040222,"results":"175","hashOfConfig":"109"},{"size":1870,"mtime":1616042816094,"results":"176","hashOfConfig":"109"},{"size":2054,"mtime":1616042446638,"results":"177","hashOfConfig":"109"},{"size":1707,"mtime":1616042763496,"results":"178","hashOfConfig":"109"},{"size":346,"mtime":1616516621106,"results":"179","hashOfConfig":"109"},{"size":711,"mtime":1615996507873,"results":"180","hashOfConfig":"109"},{"size":1191,"mtime":1616075245855,"results":"181","hashOfConfig":"109"},{"size":2791,"mtime":1616079690982,"results":"182","hashOfConfig":"109"},{"size":5246,"mtime":1616132678555,"results":"183","hashOfConfig":"109"},{"size":186,"mtime":1615906307885,"results":"184","hashOfConfig":"109"},{"size":13851,"mtime":1616942997976,"results":"185","hashOfConfig":"109"},{"size":11405,"mtime":1616689399158,"results":"186","hashOfConfig":"109"},{"size":8164,"mtime":1616669393559,"results":"187","hashOfConfig":"109"},{"size":3599,"mtime":1616669454453,"results":"188","hashOfConfig":"109"},{"size":3769,"mtime":1615815741703,"results":"189","hashOfConfig":"109"},{"size":2935,"mtime":1615911850643,"results":"190","hashOfConfig":"109"},{"size":3199,"mtime":1615815145092,"results":"191","hashOfConfig":"109"},{"size":4366,"mtime":1615814891984,"results":"192","hashOfConfig":"109"},{"size":2963,"mtime":1615907965486,"results":"193","hashOfConfig":"109"},{"size":3214,"mtime":1615979076760,"results":"194","hashOfConfig":"109"},{"size":12073,"mtime":1616857857059,"results":"195","hashOfConfig":"109"},{"size":4842,"mtime":1616133974026,"results":"196","hashOfConfig":"109"},{"size":4298,"mtime":1615906522917,"results":"197","hashOfConfig":"109"},{"size":2937,"mtime":1615909230703,"results":"198","hashOfConfig":"109"},{"size":6940,"mtime":1615815931080,"results":"199","hashOfConfig":"109"},{"size":8670,"mtime":1615815601823,"results":"200","hashOfConfig":"109"},{"size":2475,"mtime":1616080427724,"results":"201","hashOfConfig":"109"},{"size":4964,"mtime":1616133960009,"results":"202","hashOfConfig":"109"},{"size":2897,"mtime":1615899301239,"results":"203","hashOfConfig":"109"},{"size":280,"mtime":1616841228468,"results":"204","hashOfConfig":"109"},{"size":3810,"mtime":1615815426978,"results":"205","hashOfConfig":"109"},{"size":721,"mtime":1616503488082,"results":"206","hashOfConfig":"109"},{"size":2576,"mtime":1616586976539,"results":"207","hashOfConfig":"109"},{"size":3638,"mtime":1615815827310,"results":"208","hashOfConfig":"109"},{"size":2701,"mtime":1616668994269,"results":"209","hashOfConfig":"109"},{"size":4888,"mtime":1616133948762,"results":"210","hashOfConfig":"109"},{"size":7210,"mtime":1616857762951,"results":"211","hashOfConfig":"109"},{"size":1711,"mtime":1616858677820,"results":"212","hashOfConfig":"109"},{"size":293,"mtime":1616858370814,"results":"213","hashOfConfig":"109"},{"size":400,"mtime":1616673907921,"results":"214","hashOfConfig":"109"},{"size":387,"mtime":1616942027573,"results":"215","hashOfConfig":"109"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},"1ark6pw",{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"270"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"221"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"221"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"221"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"414"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"221"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\App.tsx",[],["442","443"],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\api\\experiences.ts",[],["444","445"],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\profile\\UserOverview\\UpdateInformationForm.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\profile\\UserInformation\\Tabs\\AboutMeTab.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Authentication\\Modals\\ForgotPasswordModal.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\helpers\\createFilterString.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Header\\Header.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyMapbox.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyErrorMessage.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Header\\partials\\BrandLogo.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyCheckbox.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyAutocomplete.tsx",[],["446","447"],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\index.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\routes\\index.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\helpers\\calculateProgress.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\layouts\\MainLayout.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\profile\\UserOverview\\ConfirmedInformation.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Authentication\\Forms\\ResetPasswordForm.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Authentication\\Modals\\EmailVerificationModal.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyStepper.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyAlert.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Header\\partials\\SearchBar.tsx",[],["448","449"],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\api\\auth.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\actions\\auth\\authAction.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\actions\\experience\\experienceAction.ts",[],["450","451"],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\actions\\experience\\experienceActionTypes.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\profile\\UserOverview\\DisplayedInformationForm.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Authentication\\Forms\\LoginForm.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\api\\configureAxios.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Header\\partials\\UserOptions.tsx",[],["452","453"],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyFileInput.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\reducers\\experience.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Authentication\\Forms\\RegisterForm.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\auth\\RegisterPage.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\hooks\\useErrorHandler.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\profile\\UserOverview\\UserOverview.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\profile\\ProfilePage.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\auth\\ForgotPasswordPage.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\profile\\UserInformation\\UserInformation.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Authentication\\Forms\\ForgotPasswordForm.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyTextField.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\auth\\LoginPage.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\profile\\UserOverview\\ChangePasswordForm.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\profile\\UserOverview\\DisplayedInformation.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\api\\seeds.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyRadioButton.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyPhotoUpload.tsx",["454"],"import { Button } from \"@material-ui/core\";\r\nimport AddPhotoIcon from \"@material-ui/icons/AddPhotoAlternate\";\r\nimport * as React from \"react\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { FileReaderResultType } from \"types\";\r\nimport MyModal from \"./MyModal\";\r\n\r\ninterface Props {\r\n  url?: FileReaderResultType;\r\n  type?: string;\r\n  setBase64String?: (base64String: FileReaderResultType) => void;\r\n}\r\n\r\nconst MyPhotoUpload: React.FC<Props> = ({ url, type, setBase64String }) => {\r\n  const [photoInput, setPhotoInput] = useState<Blob | null>(null);\r\n  const [previewSource, setPreviewSource] = useState<FileReaderResultType>(\r\n    url ? url : null\r\n  );\r\n  const photoInputEl = useRef<HTMLInputElement>(null);\r\n  const [width, setWidth] = useState(0);\r\n  const [height, setHeight] = useState(0);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (photoInput) {\r\n      checkImageValid(photoInput);\r\n    }\r\n  }, [photoInput]);\r\n\r\n  const checkImageValid = (photoInput: Blob) => {\r\n    if (width < 800 || height < 1200) {\r\n      setIsModalOpen(true);\r\n    } else {\r\n      previewFile(photoInput);\r\n    }\r\n  };\r\n\r\n  const handlePhotoInputChange = (e: any) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const img = new Image();\r\n      img.src = window.URL.createObjectURL(file);\r\n      img.onload = () => {\r\n        setWidth(img.naturalWidth);\r\n        setHeight(img.naturalHeight);\r\n        setPhotoInput(file);\r\n      };\r\n    }\r\n  };\r\n\r\n  const previewFile = (file: Blob) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      setPreviewSource(reader.result);\r\n      if (setBase64String) {\r\n        setBase64String(reader.result);\r\n      }\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-60 w-40\">\r\n      <label htmlFor={type}>\r\n        <div className=\"h-60 w-40 border border-gray-400 border-dashed flex justify-center items-center cursor-pointer\">\r\n          {previewSource ? (\r\n            <img\r\n              className=\"w-full h-full\"\r\n              src={previewSource as string}\r\n              alt=\"cover\"\r\n            />\r\n          ) : (\r\n            <AddPhotoIcon />\r\n          )}\r\n        </div>\r\n        <input\r\n          id={type}\r\n          type=\"file\"\r\n          ref={photoInputEl}\r\n          accept=\".jpg,.jpeg,.png.gif\"\r\n          onChange={handlePhotoInputChange}\r\n          className=\"hidden\"\r\n        />\r\n      </label>\r\n      <MyModal size=\"lg\" open={isModalOpen} setOpen={setIsModalOpen}>\r\n        {{\r\n          header: (\r\n            <h2 className=\"text-lg font-bold\">\r\n              Tải lên một bức ảnh có chất lượng tốt hơn\r\n            </h2>\r\n          ),\r\n          content: (\r\n            <div className=\"text-center\">\r\n              <p className=\"text-lg\">\r\n                Hình ảnh phải có độ phân giải ít nhất là 800px chiều rộng và\r\n                1200px chiều cao. Vui lòng đăng tải hình ảnh thỏa yêu cầu. Hình\r\n                bạn vừa tải lên có độ phân giải {width}x{height}\r\n              </p>\r\n            </div>\r\n          ),\r\n          footer: (\r\n            <div className=\"flex justify-between\">\r\n              <Button\r\n                onClick={() => setIsModalOpen(false)}\r\n                variant=\"contained\"\r\n                className=\"mr-2\"\r\n              >\r\n                Hủy\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  if (photoInputEl.current !== null) {\r\n                    photoInputEl.current.click();\r\n                    setIsModalOpen(false);\r\n                  }\r\n                }}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"ml-2\"\r\n              >\r\n                Tải ảnh khác\r\n              </Button>\r\n            </div>\r\n          ),\r\n        }}\r\n      </MyModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPhotoUpload;\r\n","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\helpers\\createLookUpString.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\constants\\index.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyModal.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\reducers\\index.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\404\\404Page.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\auth\\ResetPasswordPage.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\home\\HomePage.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\reducers\\auth.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\reducers\\alert.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\actions\\alert\\alertActionTypes.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\actions\\alert\\alertAction.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\api\\users.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\actions\\auth\\authActionTypes.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\redux\\store\\index.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\AccountPage.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyBreadcrumbs.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\information\\InfoSettingPage.tsx",["455","456"],"import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { getCurrentUser } from \"api/users\";\r\nimport MyBreadcrumbs from \"components/Shared/MyBreadcrumbs\";\r\nimport { IUserResponse } from \"interfaces/users/user.interface\";\r\nimport MainLayout from \"layouts/MainLayout\";\r\nimport * as React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ChangeAddressForm from \"./ChangeAddressForm\";\r\nimport ChangeBirthDateForm from \"./ChangeBirthDateForm\";\r\nimport ChangeGenderForm from \"./ChangeGenderForm\";\r\nimport ChangeNameForm from \"./ChangeNameForm\";\r\nimport ChangePhoneNumberForm from \"./ChangePhoneNumberForm\";\r\n\r\ninterface Props {}\r\n\r\nconst InfoSettingPage: React.FC<Props> = () => {\r\n  const [userData, setUserData] = useState<IUserResponse>();\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n  const [openNameForm, setOpenNameForm] = useState(false);\r\n  const [openGenderForm, setOpenGenderForm] = useState(false);\r\n  const [openAddressForm, setOpenAddressFrom] = useState(false);\r\n  const [openBirthDateForm, setOpenBirthDateForm] = useState(false);\r\n  const [opnePhoneNumberForm, setopenPhoneNumberForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"here\");\r\n    fetchUserInfoData();\r\n  }, []);\r\n\r\n  const fetchUserInfoData = async () => {\r\n    const {\r\n      data: { user },\r\n    } = await getCurrentUser([\r\n      \"_id\",\r\n      \"firstName\",\r\n      \"lastName\",\r\n      \"gender\",\r\n      \"dateOfBirth\",\r\n      \"phoneNumber\",\r\n      \"address\",\r\n      \"isIdVerified\",\r\n    ]);\r\n    if (user) {\r\n      setUserData(user);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainLayout withSearchBar={false}>\r\n      <div className=\"container mx-auto px-40\">\r\n        <MyBreadcrumbs\r\n          linkArray={[\r\n            {\r\n              path: \"/account-settings\",\r\n              name: \"Tài khoản\",\r\n            },\r\n            {\r\n              path: \"/account-settings/personal-info\",\r\n              name: \"Thông tin cá nhân\",\r\n            },\r\n          ]}\r\n        />\r\n        {userData ? (\r\n          <>\r\n            <div className=\"my-4\">\r\n              <h1 className=\"text-4xl font-bold text-main-blue\">\r\n                Thông tin cá nhân\r\n              </h1>\r\n            </div>\r\n            <div className=\"mt-16 max-w-xl\">\r\n              <div className=\"flex justify-between\">\r\n                <h3 className=\"text-lg font-bold text-main-blue\">\r\n                  Tên pháp lý\r\n                </h3>\r\n                <button onClick={() => setOpenNameForm(!openNameForm)}>\r\n                  <p className=\"text-lg font-bold text-secondary-blue hover:underline\">\r\n                    {openNameForm ? \"Hủy\" : \"Chỉnh sửa\"}\r\n                  </p>\r\n                </button>\r\n              </div>\r\n              <div className=\"mt-2 mb-4\">\r\n                {!openNameForm ? (\r\n                  <p className=\"text-xl\">\r\n                    {userData.firstName} {userData.lastName}\r\n                  </p>\r\n                ) : (\r\n                  <ChangeNameForm\r\n                    userId={userData._id as string}\r\n                    initialValues={{\r\n                      firstName: userData.firstName as string,\r\n                      lastName: userData.lastName as string,\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                <hr />\r\n              </div>\r\n              <div className=\"flex justify-between mt-4\">\r\n                <h3 className=\"text-lg font-bold text-main-blue\">Giới tính</h3>\r\n                <button onClick={() => setOpenGenderForm(!openGenderForm)}>\r\n                  <p className=\"text-lg font-bold text-secondary-blue hover:underline\">\r\n                    {openGenderForm ? \"Hủy\" : \"Chỉnh sửa\"}\r\n                  </p>\r\n                </button>\r\n              </div>\r\n              <div className=\"mt-2 mb-4\">\r\n                {!openGenderForm ? (\r\n                  <p className=\"text-xl\">\r\n                    {userData.gender === \"male\"\r\n                      ? \"Nam\"\r\n                      : userData.gender\r\n                      ? \"Nữ\"\r\n                      : \"Khác\"}\r\n                  </p>\r\n                ) : (\r\n                  <ChangeGenderForm\r\n                    userId={userData._id as string}\r\n                    initialValues={{ gender: userData.gender as string }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                <hr />\r\n              </div>\r\n              <div className=\"flex justify-between mt-4\">\r\n                <h3 className=\"text-lg font-bold text-main-blue\">Ngày sinh</h3>\r\n                <button\r\n                  onClick={() => setOpenBirthDateForm(!openBirthDateForm)}\r\n                >\r\n                  <p className=\"text-lg font-bold text-secondary-blue hover:underline\">\r\n                    {openBirthDateForm ? \"Hủy\" : \"Chỉnh sửa\"}\r\n                  </p>\r\n                </button>\r\n              </div>\r\n              <div className=\"mt-2 mb-4\">\r\n                {!openBirthDateForm ? (\r\n                  <p className=\"text-xl\">\r\n                    Ngày {userData.dateOfBirth?.slice(8, 10)} tháng{\" \"}\r\n                    {userData.dateOfBirth?.slice(5, 7)} năm{\" \"}\r\n                    {userData.dateOfBirth?.slice(0, 4)}\r\n                  </p>\r\n                ) : (\r\n                  <ChangeBirthDateForm\r\n                    userId={userData._id as string}\r\n                    initialValues={{\r\n                      dateOfBirth: userData.dateOfBirth as string,\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                <hr />\r\n              </div>\r\n              <div className=\"flex justify-between mt-4\">\r\n                <h3 className=\"text-lg font-bold text-main-blue\">\r\n                  Số điện thoại\r\n                </h3>\r\n                <button\r\n                  onClick={() => setopenPhoneNumberForm(!opnePhoneNumberForm)}\r\n                >\r\n                  <p className=\"text-lg font-bold text-secondary-blue hover:underline\">\r\n                    {opnePhoneNumberForm ? \"Hủy\" : \"Chỉnh sửa\"}\r\n                  </p>\r\n                </button>\r\n              </div>\r\n              <div className=\"mt-2 mb-4\">\r\n                {!opnePhoneNumberForm ? (\r\n                  <p className=\"text-xl\">{userData.phoneNumber}</p>\r\n                ) : (\r\n                  <ChangePhoneNumberForm\r\n                    userId={userData._id as string}\r\n                    initialValues={{\r\n                      phoneNumber: userData.phoneNumber as string,\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                <hr />\r\n              </div>\r\n              <div className=\"flex justify-between mt-4\">\r\n                <h3 className=\"text-lg font-bold text-main-blue\">Địa chỉ</h3>\r\n                <button onClick={() => setOpenAddressFrom(!openAddressForm)}>\r\n                  <p className=\"text-lg font-bold text-secondary-blue hover:underline\">\r\n                    {openAddressForm ? \"Hủy\" : \"Chỉnh sửa\"}\r\n                  </p>\r\n                </button>\r\n              </div>\r\n              <div className=\"mt-2 mb-4\">\r\n                {!openAddressForm ? (\r\n                  <p className=\"text-xl\">{userData.address}</p>\r\n                ) : (\r\n                  <ChangeAddressForm\r\n                    userId={userData._id as string}\r\n                    initialValues={{ address: userData.address as string }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                <hr />\r\n              </div>\r\n              <div className=\"flex justify-between mt-4\">\r\n                <h3 className=\"text-lg font-bold text-main-blue\">\r\n                  Giấy tờ tùy thân do chính phủ cấp\r\n                </h3>\r\n                <Link to=\"/account-settings/personal-info/update-id\">\r\n                  <p className=\"text-lg font-bold text-secondary-blue hover:underline\">\r\n                    {userData.isIdVerified ? \"Cập nhật\" : \"Thêm\"}\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n              <div className=\"mt-2 mb-4\">\r\n                {userData.isIdVerified ? (\r\n                  <p className=\"text-xl\">Đã cung cấp giấy tờ tùy thân</p>\r\n                ) : (\r\n                  <p className=\"text-xl\">Chưa cung cấp giấy tờ tùy thân</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"flex justify-center items-center\">\r\n            <CircularProgress />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default InfoSettingPage;\r\n","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\information\\ChangeNameForm.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\configs\\index.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\information\\ChangeGenderForm.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\information\\ChangeBirthDateForm.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\information\\ChangePhoneNumberForm.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\information\\ChangeAddressForm.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\api\\profile.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\login-and-security\\LoginAndSecuritySettingPage.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\information\\UpdateIDPage.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\information\\ChooseIDTypeForm.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\account\\setting-options\\information\\UploadIDPhotos.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\helpers\\currencyFormatter.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceManagementPage.tsx",["457"],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceActivationPage\\ExperienceActivationPage.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\ExperienceCreationPage.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Submission\\Submission.tsx",["458","459"],"import { Button, Typography } from \"@material-ui/core\";\r\nimport MyStepper from \"components/Shared/MyStepper\";\r\nimport { IExperienceResponse } from \"interfaces/experiences/experience.interface\";\r\nimport * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport IDCardVerification from \"./IDCardVerification\";\r\nimport InfoVerification from \"./InfoVerification\";\r\ninterface Props {\r\n  handleDone: (index: number) => void;\r\n}\r\n\r\nconst getSteps = (currentProgress: number, currentStep: number) => [\r\n  {\r\n    label: \"Xác thực hồ sơ\",\r\n    isCompleted: true,\r\n  },\r\n  {\r\n    label: \"Xác thực giấy tờ tùy thân\",\r\n    isCompleted:\r\n      currentProgress === -1 || currentProgress > 4 || currentStep > 2,\r\n  },\r\n];\r\n\r\nconst getStepContent = (step: number) => {\r\n  switch (step) {\r\n    case 1:\r\n      return \"Xác thực hồ sơ\";\r\n    case 2:\r\n      return \"Xác thực giấy tờ tùy thân\";\r\n    default:\r\n      return \"Unknown step\";\r\n  }\r\n};\r\n\r\nconst Setting: React.FC<Props> = ({ handleDone }) => {\r\n  /* Get the current step that user been doing from route */\r\n  const location = useLocation<{\r\n    currentProgress: number;\r\n    currentStep: number;\r\n  }>();\r\n  const { currentProgress, currentStep } = location.state;\r\n\r\n  /* Store the array of steps in state */\r\n  const [steps, setSteps] = useState(getSteps(currentProgress, currentStep));\r\n\r\n  /* Store the active step in state */\r\n  const [activeStep, setActiveStep] = useState(currentStep);\r\n\r\n  /* Store the updatedValue in state */\r\n  const [stepValue, setStepValue] = useState<IExperienceResponse>({});\r\n\r\n  /* Check if user have done the current step for the \"Next\" button */\r\n  const [isValid, setIsValid] = useState<boolean>(true);\r\n\r\n  /* Handle click on the \"Next\" button */\r\n  const handleNext = () => {\r\n    if (activeStep === steps.length) {\r\n      return handleDone(4);\r\n    }\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const stepProps = {\r\n    setStepValue,\r\n    setIsValid,\r\n  };\r\n\r\n  const renderSwitch = (stepId: number) => {\r\n    switch (stepId) {\r\n      case 1:\r\n        return <InfoVerification stepProps={stepProps} />;\r\n      case 2:\r\n        return <IDCardVerification stepProps={stepProps} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col\">\r\n      <div className=\"mx-4\">\r\n        <MyStepper\r\n          activeStep={activeStep}\r\n          steps={steps}\r\n          getStepContent={getStepContent}\r\n        />\r\n      </div>\r\n      <div className=\"flex-grow mx-4\">{renderSwitch(activeStep)}</div>\r\n      <div>\r\n        <div className=\"flex justify-between items-center p-4 bg-gray-300\">\r\n          <div>\r\n            <Button\r\n              disabled={activeStep === 1}\r\n              onClick={handleBack}\r\n              className=\"text-black\"\r\n            >\r\n              Quay lại\r\n            </Button>\r\n          </div>\r\n          <div>\r\n            <Typography>\r\n              {activeStep}/{steps.length}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              disabled={!isValid}\r\n              variant=\"contained\"\r\n              className=\"bg-black text-white\"\r\n              onClick={handleNext}\r\n            >\r\n              {activeStep === steps.length ? \"Hoàn tất\" : \"Tiếp theo\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Setting;\r\n","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Introduction\\HostProvision.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Introduction\\Title.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Idea\\Location.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Idea\\Theme.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Setting\\GroupSize.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Submission\\InfoVerification.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\Experience\\ExperiencePage.tsx",["460"],"import { CircularProgress, Hidden } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { getExperienceById } from \"api/experiences\";\r\nimport { getProfileById, updateProfileById } from \"api/profile\";\r\nimport { getCurrentUser } from \"api/users\";\r\nimport ClockIcon from \"assets/images/icons/clock.svg\";\r\nimport ConversationIcon from \"assets/images/icons/conversation.svg\";\r\nimport ListIcon from \"assets/images/icons/list.svg\";\r\nimport LoveIcon from \"assets/images/icons/love.svg\";\r\nimport LovedIcon from \"assets/images/icons/loved.svg\";\r\nimport PeopleIcon from \"assets/images/icons/people.svg\";\r\nimport SkeletonUserAvatar from \"assets/images/icons/user.svg\";\r\nimport MyImageCarousel from \"components/Shared/MyImageCarousel\";\r\nimport MyImageHero from \"components/Shared/MyImageHero\";\r\nimport MyMapbox from \"components/Shared/MyMapbox\";\r\nimport currencyFormatter from \"helpers/currencyFormatter\";\r\nimport toWeekDayString from \"helpers/toWeekDayString\";\r\nimport { IExperienceResponse } from \"interfaces/experiences/experience.interface\";\r\nimport { IProfileResponse } from \"interfaces/profiles/profile.interface\";\r\nimport { IUserResponse } from \"interfaces/users/user.interface\";\r\nimport MainLayout from \"layouts/MainLayout\";\r\nimport * as React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport { showAlert } from \"redux/actions/alert/alertAction\";\r\n\r\ninterface Props {}\r\n\r\nconst ExperiencePage: React.FC<Props> = () => {\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams<{ id: string }>();\r\n  const { url } = useRouteMatch();\r\n  const [isExperienceSaved, setIsExperienceSaved] = useState(false);\r\n  const [experience, setExperience] = useState<IExperienceResponse>();\r\n  const [userProfile, setUserProfile] = useState<IProfileResponse>();\r\n  const [user, setUser] = useState<IUserResponse>();\r\n\r\n  useEffect(() => {\r\n    fetchExperience(id);\r\n    fetchUserProfile();\r\n  }, [id]);\r\n\r\n  const fetchExperience = async (id: string) => {\r\n    const {\r\n      data: { experience },\r\n    } = await getExperienceById(id);\r\n    if (experience) {\r\n      setExperience(experience);\r\n    }\r\n  };\r\n\r\n  const fetchUserProfile = async () => {\r\n    const {\r\n      data: { user },\r\n    } = await getCurrentUser();\r\n    if (user) {\r\n      setUser(user);\r\n    }\r\n    if (user.profileId) {\r\n      const {\r\n        data: { profile },\r\n      } = await getProfileById(user.profileId);\r\n      if (profile) {\r\n        setUserProfile(profile);\r\n        setIsExperienceSaved(!!userProfile?.savedExperiences?.includes(id));\r\n      }\r\n    }\r\n  };\r\n\r\n  const savedExperience = async () => {\r\n    if (!isExperienceSaved) {\r\n      const res = await updateProfileById(userProfile?._id as string, {\r\n        savedExperiences: [...(userProfile?.savedExperiences as string[]), id],\r\n      });\r\n      if (res) {\r\n        dispatch(showAlert(\"success\", \"Lưu thành công\"));\r\n        setIsExperienceSaved(true);\r\n      }\r\n    } else {\r\n      const res = await updateProfileById(userProfile?._id as string, {\r\n        savedExperiences: userProfile?.savedExperiences?.filter(\r\n          (item) => item !== id\r\n        ),\r\n      });\r\n      if (res) {\r\n        dispatch(showAlert(\"success\", \"Xóa thành công\"));\r\n        setIsExperienceSaved(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainLayout>\r\n      {experience && user && userProfile ? (\r\n        <div className=\"w-full h-full mx-auto max-w-screen-lg\">\r\n          <div className=\"flex justify-between\">\r\n            <div>Breadcrumb</div>\r\n            <div>\r\n              <button type=\"button\" onClick={savedExperience}>\r\n                <div className=\"flex items-center\">\r\n                  <img\r\n                    className=\"mr-1\"\r\n                    src={isExperienceSaved ? LovedIcon : LoveIcon}\r\n                    alt=\"saved experience\"\r\n                    width={16}\r\n                    height={16}\r\n                  />\r\n                  <span className=\"ml-1 underline\">\r\n                    {!isExperienceSaved ? \"Lưu\" : \"Xóa\"}\r\n                  </span>\r\n                </div>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-8\">\r\n            <div className=\"overflow-hidden rounded-lg\">\r\n              <Hidden mdUp>\r\n                <MyImageCarousel\r\n                  urlArray={\r\n                    experience.photoGallery?.map((item) => item.url) as string[]\r\n                  }\r\n                />\r\n              </Hidden>\r\n              <Hidden mdDown>\r\n                <MyImageHero photoGallery={experience.photoGallery!} />\r\n              </Hidden>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-8\">\r\n            <div className=\"px-4 flex justify-between\">\r\n              <div className=\"relative w-7/12 mx-0\">\r\n                <div className=\"mt-8\">\r\n                  <section>\r\n                    <div className=\"relative\">\r\n                      <div>\r\n                        <h1 className=\"text-4xl font-bold\">\r\n                          {experience.title}\r\n                        </h1>\r\n                      </div>\r\n                    </div>\r\n                  </section>\r\n                </div>\r\n                <div className=\"mt-8\">\r\n                  <hr />\r\n                </div>\r\n                <div className=\"mt-8\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <div>\r\n                      <h1 className=\"text-2xl font-bold\">\r\n                        Trải nghiệm được tổ chức bởi {user.firstName}\r\n                      </h1>\r\n                    </div>\r\n                    <div>\r\n                      <Link to={`/user/profile/${user._id}`}>\r\n                        <Avatar\r\n                          src={\r\n                            user.avatarUrl ? user.avatarUrl : SkeletonUserAvatar\r\n                          }\r\n                          style={{ width: \"48px\", height: \"48px\" }}\r\n                          alt=\"User\"\r\n                        />\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"mt-8 flex flex-col md:flex-row md:items-stretch justify-start flex-wrap\">\r\n                    <div className=\"w-1/2 mb-4 flex items-center relative\">\r\n                      <div>\r\n                        <img src={ClockIcon} alt=\"hours\" />\r\n                      </div>\r\n                      <div className=\"ml-4 text-lg\">\r\n                        {experience.duration} giờ\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"w-1/2 mb-4 flex items-center relative\">\r\n                      <div>\r\n                        <img src={ListIcon} alt=\"hours\" />\r\n                      </div>\r\n                      <div className=\"ml-4 text-lg\">\r\n                        Bao gồm:{\" \"}\r\n                        {experience.hostProvisions?.map((item) => (\r\n                          <span key={item.id}>{item.itemName}</span>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"w-1/2 mb-4 flex items-center relative\">\r\n                      <div>\r\n                        <img src={PeopleIcon} alt=\"hours\" />\r\n                      </div>\r\n                      <div className=\"ml-4 text-lg\">\r\n                        Tối đa {experience.groupSize} khách{\" \"}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"w-1/2 mb-4 flex items-center relative\">\r\n                      <div>\r\n                        <img src={ConversationIcon} alt=\"hours\" />\r\n                      </div>\r\n                      <div className=\"ml-4 text-lg\">\r\n                        Tổ chức bằng {experience.language}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-8\">\r\n                  <hr />\r\n                </div>\r\n                <div className=\"mt-8\">\r\n                  <div>\r\n                    <div>\r\n                      <h1 className=\"text-2xl font-bold\">Bạn sẽ làm gì</h1>\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n                      <p className=\"text-lg\">{experience.description}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-8\">\r\n                  <hr />\r\n                </div>\r\n                <div className=\"mt-8\">\r\n                  <div className=\"flex\">\r\n                    <div>\r\n                      <Link to={`/user/profile/${user._id}`}>\r\n                        <Avatar\r\n                          src={\r\n                            user.avatarUrl ? user.avatarUrl : SkeletonUserAvatar\r\n                          }\r\n                          style={{ width: \"48px\", height: \"48px\" }}\r\n                          alt=\"User\"\r\n                        />\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"ml-2\">\r\n                      <h1 className=\"text-2xl font-bold\">\r\n                        Người hướng dẫn của bạn, {user.firstName}\r\n                      </h1>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mt-4\">\r\n                    <p className=\"text-lg\">{userProfile.introduction}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-8\">\r\n                  <hr />\r\n                </div>\r\n                <div className=\"mt-8\">\r\n                  <div>\r\n                    <h1 className=\"text-2xl font-bold\">Địa điểm tổ chức</h1>\r\n                  </div>\r\n                  <div className=\"mt-4 flex justify-center\">\r\n                    <MyMapbox\r\n                      width=\"100%\"\r\n                      height=\"400px\"\r\n                      coordinates={\r\n                        experience.location?.coordinates as [number, number]\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"relative w-1/3 ml-1/12\">\r\n                <div className=\"sticky top-20 z-10 inline-block w-full\">\r\n                  <div className=\"border border-gray-300 rounded-lg shadow-lg p-4\">\r\n                    <div>\r\n                      <p>\r\n                        <span className=\"text-xl font-bold\">\r\n                          {currencyFormatter(\r\n                            experience.pricing?.individualPrice as number\r\n                          )}\r\n                        </span>\r\n                        <span className=\"text-xl\"> / người</span>\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n                      <p className=\"text-lg\">Lịch hoạt động: </p>\r\n                      {experience.availableDates.map((item, idx) => (\r\n                        <div key={idx} className=\"mt-2 flex justify-between\">\r\n                          <p>\r\n                            {toWeekDayString(item.dateObject.weekDay)},{\" \"}\r\n                            {item.dateObject.day}/{item.dateObject.month}/\r\n                            {item.dateObject.year}\r\n                          </p>\r\n                          <Link\r\n                            to={{\r\n                              pathname: `${url}/confirm-booking`,\r\n                              state: { time: item },\r\n                            }}\r\n                          >\r\n                            Đặt chổ\r\n                          </Link>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default ExperiencePage;\r\n","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Idea\\Idea.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Setting\\Price.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Setting\\BookingDate.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Introduction\\Photos.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Introduction\\Address.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Submission\\IDCardVerification.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Introduction\\Introduction.tsx",[],["461","462"],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Idea\\Language.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\api\\payment.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Introduction\\Description.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyImageCarousel.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\components\\Shared\\MyImageHero.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Introduction\\GuestBring.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Setting\\Duration.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\ExperienceManagement\\ExperienceCreationPage\\Setting\\Setting.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\Experience\\ConfirmBookingPage.tsx",["463"],"import { Button, CircularProgress } from \"@material-ui/core\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { getExperienceById } from \"api/experiences\";\r\nimport { createBookingSession } from \"api/payment\";\r\nimport { createReceipt } from \"api/receipt\";\r\nimport { getCurrentUser, getUserById } from \"api/users\";\r\nimport LeftArrow from \"assets/images/icons/left-arrow.svg\";\r\nimport { startTimeOptions } from \"constants/index\";\r\nimport currencyFormatter from \"helpers/currencyFormatter\";\r\nimport toWeekDayString from \"helpers/toWeekDayString\";\r\nimport { IExperienceResponse } from \"interfaces/experiences/experience.interface\";\r\nimport { IUserResponse } from \"interfaces/users/user.interface\";\r\nimport MainLayout from \"layouts/MainLayout\";\r\nimport * as React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\n\r\ninterface Props {}\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51IXjZvDcrQRGXIG6oVlm1uSOLxiyQnMTeGoCgnoYV3dcMAISpT1WpHia1PmB85B7oyIF26CQCkt3IbcQKcXvSs6C00Z348v2eg\"\r\n);\r\n\r\nconst ConfirmBookingPage: React.FC<Props> = () => {\r\n  const history = useHistory();\r\n  const { id } = useParams<{ id: string }>();\r\n  const location = useLocation<{ time }>();\r\n  const [experience, setExperience] = useState<IExperienceResponse>();\r\n  const [host, setHost] = useState<IUserResponse>();\r\n  const [currentUser, setCurrentUser] = useState<IUserResponse>();\r\n  const { time } = location.state;\r\n\r\n  useEffect(() => {\r\n    if (time) {\r\n      fetchExperience(id);\r\n    } else {\r\n      history.goBack();\r\n    }\r\n  }, [id]);\r\n\r\n  const fetchExperience = async (id: string) => {\r\n    const {\r\n      data: { experience },\r\n    } = await getExperienceById(id);\r\n    if (experience) {\r\n      setExperience(experience);\r\n      fetchHostData(experience.hostId);\r\n      fetchCurrentUser();\r\n    }\r\n  };\r\n\r\n  const fetchHostData = async (hostId: string) => {\r\n    const {\r\n      data: { user },\r\n    } = await getUserById(hostId, [\"firstName\", \"lastName\"]);\r\n    if (user) {\r\n      setHost(user);\r\n    }\r\n  };\r\n\r\n  const fetchCurrentUser = async () => {\r\n    const {\r\n      data: { user },\r\n    } = await getCurrentUser([\"email\"]);\r\n    if (user) {\r\n      setCurrentUser(user);\r\n    }\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    const stripe = await stripePromise;\r\n    if (experience) {\r\n      const { data: receiptId } = await createReceipt({\r\n        hostId: experience.hostId,\r\n        experienceId: experience._id,\r\n        takePlace: time,\r\n        unitPrice: experience.pricing?.individualPrice,\r\n        numberOfGuest: 1,\r\n        totalPrice: (experience.pricing?.individualPrice as number) * 1,\r\n      });\r\n      if (receiptId) {\r\n        const {\r\n          data: { id: sessionId },\r\n        } = await createBookingSession({\r\n          receipt: {\r\n            id: receiptId,\r\n          },\r\n          experience: {\r\n            id: experience._id,\r\n            name: experience.title,\r\n            description: experience.description,\r\n            price: experience.pricing?.individualPrice,\r\n            image: experience.photoGallery,\r\n          },\r\n          customer: {\r\n            customerId: currentUser?._id,\r\n            customerEmail: currentUser?.email,\r\n          },\r\n        });\r\n        if (stripe && sessionId) {\r\n          await stripe.redirectToCheckout({\r\n            sessionId: sessionId,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainLayout withSearchBar={false}>\r\n      {experience && host ? (\r\n        <div className=\"container mx-auto px-40\">\r\n          <div className=\"flex items-center\">\r\n            <button className=\"mr-8\" onClick={() => history.goBack()}>\r\n              <img src={LeftArrow} width={20} height={20} alt=\"left arrow\" />\r\n            </button>\r\n            <h1 className=\"text-4xl font-bold\">Xác nhận thanh toán</h1>\r\n          </div>\r\n          <div className=\"mt-8 max-w-4xl\">\r\n            <div className=\"flex justify-between\">\r\n              <p className=\"text-xl font-bold\">Tên hoạt động:</p>\r\n              <p className=\"text-xl \">{experience.title}</p>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <p className=\"text-xl font-bold\">Tên người hướng dẫn:</p>\r\n              <p className=\"text-xl\">\r\n                {host.firstName} {host.lastName}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <p className=\"text-xl font-bold\">Ngày diễn ra:</p>\r\n              <p className=\"text-xl\">\r\n                {toWeekDayString(time.dateObject.weekDay)}, ngày{\" \"}\r\n                {time.dateObject.day} tháng {time.dateObject.month} năm{\" \"}\r\n                {time.dateObject.year}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <p className=\"text-xl font-bold\">Giờ bắt đầu:</p>\r\n              <p className=\"text-xl\">\r\n                {startTimeOptions[time.startTimeIdx].text}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <p className=\"text-xl font-bold\">Giờ kết thúc:</p>\r\n              <p className=\"text-xl\">\r\n                {time.endTimeIdx >= 45\r\n                  ? startTimeOptions[time.endTimeIdx + 4 - 48].text\r\n                  : startTimeOptions[time.endTimeIdx].text}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <p className=\"text-xl font-bold\">Địa điểm:</p>\r\n              <p className=\"text-xl\">\r\n                {experience.address?.street}, {experience.address?.ward},{\" \"}\r\n                {experience.address?.district}, {experience.address?.city}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <p className=\"text-xl font-bold\">Số lượng:</p>\r\n              <p className=\"text-xl\">1 người</p>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <p className=\"text-xl font-bold\">Chi phí:</p>\r\n              <p className=\"text-xl\">\r\n                {currencyFormatter(\r\n                  experience.pricing?.individualPrice as number\r\n                )}{\" \"}\r\n                x 1\r\n              </p>\r\n            </div>\r\n            <div className=\"my-4\">\r\n              <hr />\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <p className=\"text-xl font-bold\">Tổng tiền thanh toán:</p>\r\n              <p className=\"text-xl\">\r\n                {currencyFormatter(\r\n                  experience.pricing?.individualPrice as number\r\n                )}{\" \"}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex flex-row-reverse mt-4\">\r\n              <Button\r\n                variant=\"contained\"\r\n                className=\"bg-main-blue text-white self-end\"\r\n                onClick={handleClick}\r\n              >\r\n                Thanh toán\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default ConfirmBookingPage;\r\n","D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\pages\\client\\experience\\Experience\\SuccessBookingResponsePage.tsx",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\api\\receipt.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\helpers\\toWeekDayString.ts",[],"D:\\Dev\\uit\\GraduationThesis\\tripsy\\src\\api\\stripe.ts",[],{"ruleId":"464","replacedBy":"465"},{"ruleId":"466","replacedBy":"467"},{"ruleId":"464","replacedBy":"468"},{"ruleId":"466","replacedBy":"469"},{"ruleId":"464","replacedBy":"470"},{"ruleId":"466","replacedBy":"471"},{"ruleId":"464","replacedBy":"472"},{"ruleId":"466","replacedBy":"473"},{"ruleId":"464","replacedBy":"474"},{"ruleId":"466","replacedBy":"475"},{"ruleId":"464","replacedBy":"476"},{"ruleId":"466","replacedBy":"477"},{"ruleId":"478","severity":1,"message":"479","line":28,"column":6,"nodeType":"480","endLine":28,"endColumn":18,"suggestions":"481"},{"ruleId":"482","severity":1,"message":"483","line":19,"column":10,"nodeType":"484","messageId":"485","endLine":19,"endColumn":20},{"ruleId":"482","severity":1,"message":"486","line":19,"column":22,"nodeType":"484","messageId":"485","endLine":19,"endColumn":35},{"ruleId":"478","severity":1,"message":"487","line":39,"column":6,"nodeType":"480","endLine":39,"endColumn":8,"suggestions":"488"},{"ruleId":"482","severity":1,"message":"489","line":45,"column":17,"nodeType":"484","messageId":"485","endLine":45,"endColumn":25},{"ruleId":"482","severity":1,"message":"490","line":51,"column":10,"nodeType":"484","messageId":"485","endLine":51,"endColumn":19},{"ruleId":"478","severity":1,"message":"491","line":42,"column":6,"nodeType":"480","endLine":42,"endColumn":10,"suggestions":"492"},{"ruleId":"464","replacedBy":"493"},{"ruleId":"466","replacedBy":"494"},{"ruleId":"478","severity":1,"message":"495","line":39,"column":6,"nodeType":"480","endLine":39,"endColumn":10,"suggestions":"496"},"no-native-reassign",["497"],"no-negated-in-lhs",["498"],["497"],["498"],["497"],["498"],["497"],["498"],["497"],["498"],["497"],["498"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkImageValid'. Either include it or remove the dependency array.","ArrayExpression",["499"],"@typescript-eslint/no-unused-vars","'isFormOpen' is assigned a value but never used.","Identifier","unusedVar","'setIsFormOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchPayOutInformation'. Either include it or remove the dependency array.",["500"],"'setSteps' is assigned a value but never used.","'stepValue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserProfile'. Either include it or remove the dependency array.",["501"],["497"],["498"],"React Hook useEffect has missing dependencies: 'fetchExperience', 'history', and 'time'. Either include them or remove the dependency array.",["502"],"no-global-assign","no-unsafe-negation",{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},"Update the dependencies array to be: [checkImageValid, photoInput]",{"range":"511","text":"512"},"Update the dependencies array to be: [fetchPayOutInformation]",{"range":"513","text":"514"},"Update the dependencies array to be: [fetchUserProfile, id]",{"range":"515","text":"516"},"Update the dependencies array to be: [fetchExperience, history, id, time]",{"range":"517","text":"518"},[966,978],"[checkImageValid, photoInput]",[1486,1488],"[fetchPayOutInformation]",[2041,2045],"[fetchUserProfile, id]",[1605,1609],"[fetchExperience, history, id, time]"]